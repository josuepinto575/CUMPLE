const PI2 = Math.PI * 2;
const random = (min, max) => Math.random() * (max - min + 1) + min | 0;
const timestamp = _ => new Date().getTime();

class Birthday {
  constructor() {
    this.resize();
    this.fireworks = [];
    this.balloons = [];
    this.counter = 0;
    this.balloonCounter = 0;

    // Crear algunos globos inicialmente
    for (let i = 0; i < 10; i++) {
      this.balloons.push(new Balloon());
    }
  }

  resize() {
    this.width = canvas.width = window.innerWidth;
    this.height = canvas.height = window.innerHeight;
  }

  onClick(evt) {
    let x = evt.clientX || evt.touches && evt.touches[0].pageX;
    let y = evt.clientY || evt.touches && evt.touches[0].pageY;

    let count = random(3, 5);
    for (let i = 0; i < count; i++) this.fireworks.push(new Firework(
      random(0, this.width),
      this.height,
      x,
      y,
      random(0, 360),
      random(30, 110)
    ));
    this.counter = -1;
  }

  update(delta) {
    ctx.globalCompositeOperation = 'hard-light';
    ctx.fillStyle = `rgba(20, 20, 20, ${7 * delta})`;
    ctx.fillRect(0, 0, this.width, this.height);

    ctx.globalCompositeOperation = 'lighter';
    this.fireworks.forEach(firework => firework.update(delta));
    this.balloons.forEach(balloon => balloon.update(delta));

    this.counter += delta * 3;
    if (this.counter >= 1) {
      this.fireworks.push(new Firework(
        random(0, this.width),
        this.height,
        random(0, this.width),
        random(0, this.height / 2),
        random(0, 360),
        random(30, 110)
      ));
      this.counter = 0;
    }

    // Añadir globos periódicamente
    this.balloonCounter += delta;
    if (this.balloonCounter >= 3.5) {
      this.balloons.push(new Balloon());
      this.balloonCounter = 0;
    }

    this.fireworks = this.fireworks.filter(firework => !firework.dead);
    this.balloons = this.balloons.filter(balloon => !balloon.offScreen());
  }
}

class Balloon {
  constructor() {
    this.x = random(50, canvas.width - 50);
    this.y = canvas.height + random(50, 200);
    this.radius = random(20, 40);
    this.speed = random(1, 3);
    this.color = `hsl(${random(0, 360)}, 100%, 50%)`;
  }

  draw() {
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.radius, 0, PI2);
    ctx.fillStyle = this.color;
    ctx.fill();
    ctx.closePath();

    // Dibujar la cuerda
    ctx.beginPath();
    ctx.moveTo(this.x, this.y + this.radius);
    ctx.lineTo(this.x, this.y + this.radius + 50);
    ctx.strokeStyle = "#555";
    ctx.lineWidth = 2;
    ctx.stroke();
  }

  update(delta) {
    this.y -= this.speed * delta * 50;
    this.draw();
  }

  offScreen() {
    return this.y + this.radius < 0;
  }
}

class Firework {
  constructor(x, y, targetX, targetY, shade, offsprings) {
    this.dead = false;
    this.offsprings = offsprings;
    this.x = x;
    this.y = y;
    this.targetX = targetX;
    this.targetY = targetY;
    this.shade = shade;
    this.history = [];
  }

  update(delta) {
    if (this.dead) return;

    let xDiff = this.targetX - this.x;
    let yDiff = this.targetY - this.y;
    if (Math.abs(xDiff) > 3 || Math.abs(yDiff) > 3) {
      this.x += xDiff * 2 * delta;
      this.y += yDiff * 2 * delta;
      this.history.push({ x: this.x, y: this.y });

      if (this.history.length > 20) this.history.shift();
    } else {
      if (this.offsprings && !this.madeChilds) {
        let babies = this.offsprings / 2;
        for (let i = 0; i < babies; i++) {
          let targetX = this.x + this.offsprings * Math.cos(PI2 * i / babies);
          let targetY = this.y + this.offsprings * Math.sin(PI2 * i / babies);

          birthday.fireworks.push(new Firework(this.x, this.y, targetX, targetY, this.shade, 0));
        }
      }
      this.madeChilds = true;
      this.history.shift();
    }

    if (this.history.length === 0) this.dead = true;
    else {
      ctx.beginPath();
      ctx.fillStyle = 'hsl(' + this.shade + ',100%,50%)';
      ctx.arc(this.x, this.y, 1, 0, PI2);
      ctx.fill();
    }
  }
}

let canvas = document.getElementById('birthday');
let ctx = canvas.getContext('2d');

let then = timestamp();
let birthday = new Birthday();

window.onresize = () => birthday.resize();
document.onclick = evt => birthday.onClick(evt);
document.ontouchstart = evt => birthday.onClick(evt);

(function loop() {
  requestAnimationFrame(loop);
  let now = timestamp();
  let delta = now - then;
  then = now;
  birthday.update(delta / 1000);
})();

